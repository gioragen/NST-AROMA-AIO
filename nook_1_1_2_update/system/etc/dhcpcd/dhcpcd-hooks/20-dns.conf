# Set net.<iface>.dnsN properties that contain the
# DNS server addresses given by the DHCP server.
# BN_ENCORE: add two public DNS addresses to assure properly resolving dynamic names if supplied DNS is misconfigured

set_dns_props()
{
    case "${new_domain_name_servers}" in
    "")   return 0;;
    esac

    count=1
    for i in 1 2 3 4; do
        setprop dhcp.${interface}.dns${i} ""
    done
    count=1
    bn_dns_count=0
    bn_dns1="8.8.8.8"
    bn_dns2="8.8.4.4"
    for dnsaddr in ${new_domain_name_servers}; do
        setprop dhcp.${interface}.dns${count} ${dnsaddr}
        case $dnsaddr in
            $bn_dns1) bn_dns_count=$(($bn_dns_count + 1));;
            $bn_dns2) bn_dns_count=$(($bn_dns_count + 2));;
        esac
        count=$(($count + 1))
    done
    case $count in
        1|2|3) #two more DNS are available
            case $bn_dns_count in
                0)  setprop dhcp.${interface}.dns${count} $bn_dns1;
                    count=$(($count + 1));
                    setprop dhcp.${interface}.dns${count} $bn_dns2;;
                1)  setprop dhcp.${interface}.dns${count} $bn_dns2;;
                2)  setprop dhcp.${interface}.dns${count} $bn_dns1;;
            esac
        ;;
        4) #we can add only one DNS
            case $bn_dns_count in
                0|2)setprop dhcp.${interface}.dns${count} $bn_dns1;;
                1)  setprop dhcp.${interface}.dns${count} $bn_dns2;;
            esac
        ;;
    esac
}

unset_dns_props()
{
    for i in 1 2 3 4; do
        setprop dhcp.${interface}.dns${i} ""
    done
}

case "${reason}" in
BOUND|INFORM|REBIND|REBOOT|RENEW|TIMEOUT)       set_dns_props;;
EXPIRE|FAIL|IPV4LL|RELEASE|STOP)                unset_dns_props;;
esac
